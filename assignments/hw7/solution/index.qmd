---
title: "Homework #6"
subtitle: "Exercises from Chapter 4.6: 4, 7 and 8"
description: |
    **Assigned:** Friday, October 6th, 2023 <br>
    **Due:** Friday, October 20th, 2023
author: 
    -   name: Brynjólfur Gauti Guðrúnar Jónsson
        email: brynjolfur@hi.is
        url: https://www.hi.is/staff/brynjolfur
        affiliation: 
        -   name: School of Engineering and Natural Sciences, University of Iceland
            city: Reykjavík
            url: https://english.hi.is/school_of_engineering_and_natural_sciences
# Change this to pdf if you'd rather work in that format
format: html 
editor: source
title-block-banner: true
#### The setting below makes our HTML document self-contained so that we can turn it in ####
#### UNCOMMENT THE LONE BELOW SO THAT YOU CAN TURN IN YOUR HTML DOCUMENT ###################
# embed-resources: true 
---

```{r}
#| echo: fenced
#| output: hide


```


{{< downloadthis index.qmd dname="hw5" label="Download the Quarto document used to render this file" type=primary class=downloadbutton >}}


```{r}
#| echo: fenced
#| output: hide

library(ggplot2)
library(rjags)
library(posterior)
library(bayesplot)
library(gt)
library(dplyr)
theme_set(theme_classic())
```


# 4

---

a.

---

**Solution:**

```{r}
tmp <- tempfile()
download.file(
    url = "https://www4.stat.ncsu.edu/~bjreich/BSMdata/guns.RData",
    destfile = tmp
)

load(tmp)
rm(tmp)
```

```{r}
GunLaws <- rowSums(X)
```

```{r}
my_X <- cbind(Z, GunLaws) |> scale()
```

```{r}
model_string <- textConnection("model{
    # Likelihood
    for (i in 1:N_obs) {
        Y[i] ~ dpois(N[i] * lambda[i])
        log(lambda[i]) <- exp(alpha + inprod(X[i, ], beta[]))
    }
    for (j in 1:6) {
        beta[j] ~ dnorm(0, 0.0001)
    }
    
    alpha ~ dnorm(0, 0.0001)
}")

data = list(
    X = my_X,
    N = N,
    Y = Y,
    N_obs = length(Y)
)

model <- jags.model(
    model_string,
    data = data,
    n.chains = 4
)

update(model, 10000)


samples <- coda.samples(
    model,
    variable.names = c("alpha", "beta"),
    n.iter = 10000
)

posterior_jags <- samples |> 
    as_draws_df()
```

```{r}
posterior_jags |> 
    summarise_draws() |> 
    gt() |> 
    fmt_number(
        decimals = 2
    ) 
```

```{r}
mcmc_trace(
    posterior_jags
)
```

b.

---

**Solution:**

```{r}
model_string <- textConnection("model{
    # Likelihood
    for (i in 1:N_obs) {
        Y[i] ~ dnegbin(q[i], m)
        q[i] <- m / (m + N[i] * lambda[i])
        log(lambda[i]) <- alpha + inprod(X[i, ], beta[])
    }
    for (j in 1:6) {
        beta[j] ~ dnorm(0, 0.0001)
    }
    
    alpha ~ dnorm(0, 0.0001)
    m ~ dgamma(0.1, 0.1)
}")

data = list(
    X = my_X,
    N = N,
    Y = Y,
    N_obs = length(Y)
)

model <- jags.model(
    model_string,
    data = data,
    n.chains = 4
)

update(model, 10000)


samples <- coda.samples(
    model,
    variable.names = c("alpha", "beta", "m"),
    n.iter = 10000
)

posterior_jags <- samples |> 
    as_draws_df()
```

```{r}
posterior_jags |> 
    summarise_draws() |> 
    mutate(
        plot_col = 1
    ) |> 
    gt() |> 
    fmt_number(
        decimals = 2
    ) 
```

```{r}
mcmc_trace(
    posterior_jags
)
```



---

# 7

---

**Solution:**

---


# 8

---

**Solution:**

---

